on:
  push:
    branches:
      - 'develop'
      - 'main'

name: Build Bets Service

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: ECR_Login  # <-- Change here
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.ECR_Login.outputs.registry }}  # <-- Change here
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        IMAGE_TAG: latest
      run: |
        # Get the short commit SHA
        SHORT_SHA=$(git rev-parse --short $GITHUB_SHA)
        
        # Build the Docker image
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA .
        
        # Push the 'latest' tag to ECR
        echo "Pushing 'latest' tag image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        
        # Push the short commit SHA tag to ECR
        echo "Pushing '$SHORT_SHA' tag image to ECR..."
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA
                
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$SHORT_SHA"

    - name: Download task definition
      run: |
        echo $DEV_ECS_TASK_FAMILY
        aws ecs describe-task-definition --task-definition $DEV_ECS_TASK_FAMILY --query taskDefinition > task-definition.json    
    
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: my-container
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: $DEV_ECS_SERVICE 
        cluster: $DEV_ECS_SERVICE 
        wait-for-service-stability: true